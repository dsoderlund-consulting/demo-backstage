organization:
  name: dsoderlund.consulting
app:
  # Should be the same as backend.baseUrl when using the `app-backend` plugin.
  baseUrl: http://localhost:7007

backend:
  # Note that the baseUrl should be the URL that the browser and other clients
  # should use when communicating with the backend, i.e. it needs to be
  # reachable not just from within the backend host, but from all of your
  # callers. When its value is "http://localhost:7007", it's strictly private
  # and can't be reached by others.
  baseUrl: http://localhost:7007
  # The listener can also be expressed as a single <host>:<port> string. In this case we bind to
  # all interfaces, the most permissive setting. The right value depends on your specific deployment.
  listen: ':7007'

  # config options: https://node-postgres.com/apis/client
  database:
    client: pg
    pluginDivisionMode: schema
    connection: ${uri}
      # host: ${host}
      # port: ${port}
      # user: ${username}
      # password: ${password}
      # database: ${dbname}
      # https://node-postgres.com/features/ssl
      # you can set the sslmode configuration option via the `PGSSLMODE` environment variable
      # see https://www.postgresql.org/docs/current/libpq-ssl.html Table 33.1. SSL Mode Descriptions (e.g. require)
      # ssl:
      #   ca: # if you have a CA file and want to verify it you can uncomment this section
      #     $file: <file-path>/ca/server.crt
    
  cache:
    store: redis
    connection: "redis://${REDIS_CLIENT}:${redis-password}@${REDIS_HOST}:${REDIS_PORT}"
# integrations:
#   github:
#     - host: github.com
#       apps:
#         - $include: github-app-backstage-dsoderlund-credentials.yaml
auth:
  environment: production
  providers:
    oauth2Proxy: {}
    github:
      production:
        clientId: ${AUTH_GITHUB_CLIENT_ID}
        clientSecret: ${AUTH_GITHUB_CLIENT_SECRET}

catalog:
  providers:
    keycloakOrg:
      default:
        baseUrl: ${KEYCLOAK_URL}
        loginRealm: ${KEYCLOAK_REALM}
        realm: ${KEYCLOAK_REALM}
        clientId: ${KEYCLOAK_CLIENTID}
        clientSecret: ${KEYCLOAK_CLIENTSECRET}
        schedule: # Mandatory; same options as in TaskScheduleDefinition
          # supports cron, ISO duration, "human duration" as used in code
          frequency: { minutes: 30 } # Customize this to fit your needs
          # supports ISO duration, "human duration" as used in code
          timeout: { minutes: 3 } # Customize this to fit your needs
          initialDelay: { seconds: 15 } # Customize this to fit your needs
  # Overrides the default list locations from app-config.yaml as these contain example data.
  # See https://backstage.io/docs/features/software-catalog/#adding-components-to-the-catalog for more details
  # on how to get entities into the catalog.
  locations:
    - type: url
      target: https://github.com/dsoderlund-consulting/demo-backstage/blob/main/ds-templates/all-templates.yaml
      rules:
        - allow: [Location, Template]
techdocs:
  builder: 'local' # Alternatives - 'external'
  generator:
    runIn: 'local' # Alternatives - 'local'
  publisher:
    type: 'local' # Alternatives - 'googleGcs' or 'awsS3'. Read documentation for using alternatives.
scaffolder:
  defaultAuthor:
    name: "demo.dsoderlund.consulting"
    email: "demo@dsoderlund.consulting"
  defaultCommitMessage: "Generated through template at demo.dsoderlund.consulting"
kubernetes:
  serviceLocatorMethod:
    type: 'catalogRelation'
  clusterLocatorMethods:
    - type: 'config'
      clusters:
        - url: https://kubernetes.default.svc
          name: local
          authProvider: 'serviceAccount'
          skipTLSVerify: true
          skipMetricsLookup: true
          serviceAccountToken:
            $file: /var/run/secrets/kubernetes.io/serviceaccount/token
permission:
  enabled: true
customFeatureToggle:
  OrgKeycloak: true
  AuthOAuth2: true
  AuthGoogle: false
  AuthGithub: true
# genericGit:
#   github:
#     $include: git-github-credentials.yaml